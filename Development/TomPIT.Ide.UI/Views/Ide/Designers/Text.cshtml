@using System.Text.Encodings.Web;
@using TomPIT.Ide;
@using TomPIT.ComponentModel;

@model TomPIT.Ide.Designers.TextDesigner

@*@await Html.PartialAsync("~/Views/Ide/Designers/Signature.cshtml", Model.Signature)*@

<div class="template-toolbar btn-toolbar justify-content-between">

    <div class="btn-group">
        @if (!string.IsNullOrWhiteSpace(Model.DebugFileName))
        {
            var url = Model.Environment.Context.Services.Routing.MapPath(string.Format("~/sys/source-code/{0}/{1}/{2}", Model.Element.MicroService(), Model.Content.Configuration().Component, Model.Content.Id.ToString()));

            <a href="@url" target="_blank" class="btn btn-sm btn-light" title="Download source code for debugging"><i class="fal fa-bug"></i></a>
        }
    </div>
</div>

<script>
        @{
            var lines = string.IsNullOrWhiteSpace(Model.Text) ? new string[0] : Model.Text.Split(new string[] { "\r\n", "\n" }, StringSplitOptions.None);
    }

    var src = [@foreach (var i in lines){
        @:'@Html.Raw(JavaScriptEncoder.Default.Encode(i))',
    }
        ];


    ide.setActiveDesigner({
        onUnload: function () {
            //textEditor.deactivateEditor();
        },
        onSaveState: function () {
            return {
                //'position': textEditor.getEditor().getPosition()
            }
        },
        onLoadState: function (state) {
            //if (typeof state.position !== 'undefined') {
            //    textEditor.getEditor().setPosition(state.position);
            //    textEditor.getEditor().revealLineInCenter(state.position.lineNumber);
            //}

            //textEditor.getEditor().focus();
        },
        isTextDesigner: function () {
            return true;
        }
    });


</script>