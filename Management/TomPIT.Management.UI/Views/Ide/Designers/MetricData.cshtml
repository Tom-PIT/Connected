@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using TomPIT
@using TomPIT.Management;

@model TomPIT.Management.Designers.MetricDesigner

<div class="row">
	<div class="col-lg-3">
		<div class="kpi info">
			<div class="kpi-title">
				Requests
			</div>
			<hr />
			<div class="row">
				<div class="col-6">
					Total
					<div class="kpi-value">
						@Model.Data.Count.ToString("n0")
					</div>
				</div>
				<div class="col-6">
					Success
					<div class="kpi-value">
						@Model.SuccessRate.ToString("p0")
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-lg-6">
		<div class="kpi info">
			<div class="kpi-title">
				Performance
			</div>
			<hr />
			<div class="row">
				<div class="col-4">
					min
					<div class="kpi-value">
						@Model.Min.ToString("n0") <span class="kpi-measure-unit">ms</span>
					</div>
				</div>
				<div class="col-4">
					avg
					<div class="kpi-value">
						@Model.Avg.ToString("n0") <span class="kpi-measure-unit">ms</span>
					</div>
				</div>
				<div class="col-4">
					max
					<div class="kpi-value">
						@Model.Max.ToString("n0") <span class="kpi-measure-unit">ms</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-lg-3">
		<div class="kpi info">
			<div class="kpi-title">
				Data
			</div>
			<hr />
			<div class="row">
				<div class="col-6">
					in
					<div class="kpi-value">
						@Html.Raw(Types.ToFileSize(Model.ConsumptionIn, "kpi-measure-unit"))
					</div>
				</div>
				<div class="col-6">
					out
					<div class="kpi-value">
						@Html.Raw(Types.ToFileSize(Model.ConsumptionOut, "kpi-measure-unit"))
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@if (Model.Data.Count == 0)
{
	<div class="dev-no-data">
		no metric data for today
	</div>
	return;
}

<ul class="list-unstyled">
	@foreach (var i in Model.Data)
	{
		double duration = 0;
		var css = "metric-item";
		var performanceCss = "fast";

		if (i.Duration() > Model.Avg) { performanceCss = "slow"; }
		if (i.End != DateTime.MinValue)
		{
			duration = i.End.Subtract(i.Start).TotalMilliseconds;
		}

		if (i.Result == TomPIT.Diagnostics.SessionResult.Fail)
		{
			css += " fail";
		}
		<li class="@css" data-id="@i.Session">
			<div class="row" data-session="true">
				<div class="col-sm-3">
					<div>
						@i.Start.ToLongTimeString()
					</div>
					<div class="@performanceCss">@duration.ToString("n0") ms</div>
				</div>
				<div class="col-sm-6">
					<div>
						@i.Features.ToString()
					</div>
					@i.IP
				</div>
				<div class="col-sm-3">
					<div>
						@Types.ToFileSize(i.ConsumptionIn)
					</div>
					@Types.ToFileSize(i.ConsumptionOut)

				</div>
			</div>
			<div class="row collapse" data-detail="true">
				<div class="col">
					<ul class="nav nav-tabs">
						<li class="nav-item">
							<a class="nav-link active" href="#@string.Format("request{0}", i.Session)" data-toggle="tab" role="tab">Request</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#@string.Format("response{0}", i.Session)" data-toggle="tab" role="tab">Response</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#@string.Format("log{0}", i.Session)" data-toggle="tab" role="tab" data-log="true">Log</a>
						</li>
					</ul>
					<div class="tab-content">
						<div class="tab-pane fade show active" id="@string.Format("request{0}", i.Session)" role="tabpanel" aria-labelledby="properties-tab">
							@if (string.IsNullOrWhiteSpace(i.Request))
							{
								<div class="dev-no-data">no request data</div>
							}
							else
							{
								var rq = JsonConvert.DeserializeObject(i.Request);
								var rqs = JsonConvert.SerializeObject(rq, Formatting.Indented);
								<pre><code class="hljs json">@Html.Raw(rqs)</code></pre>
							}
						</div>
						<div class="tab-pane fade" id="@string.Format("response{0}", i.Session)" role="tabpanel" aria-labelledby="events-tab">
							@if (string.IsNullOrWhiteSpace(i.Response))
							{
								<div class="dev-no-data">no response data</div>
							}
							else
							{
								var rs = JsonConvert.DeserializeObject(i.Response);
								var rss = JsonConvert.SerializeObject(rs, Formatting.Indented);
								<pre>
								<code class="hljs json">@Html.Raw(rss)</code>
</pre>
							}
						</div>
						<div class="tab-pane fade" id="@string.Format("log{0}", i.Session)" role="tabpanel" aria-labelledby="toolbox-tab" data-loaded="false">
							<div class="dev-no-data">loading log data</div>
						</div>
					</div>
				</div>
			</div>
		</li>
	}
</ul>

<script>
	$('[data-log="true"]').click(function () {
		var id = $(this).attr('href').substr(4);
		var s = $('#log' + id);

		if (s.attr('data-loaded') === 'true')
			return;

		s.attr('data-loaded', 'true');

		ide.designerAction({
			'data': {
				'action': 'log',
				'id': id
			},
			onComplete: function (data) {
				s.html(data);
			}
		});
	});

	$('[data-session="true"]').click(function () {
		var s = $('[data-detail="true"]', $(this).parent());
		var shown = s.hasClass('show');

		$('[data-detail="true"]').collapse('hide');

		s.collapse('toggle');

		freezeRefresh = !shown;
	});

	var items = $('code.hljs.json');

	hljs.configure({
		useBR: true
	});

	$.each(items, function (i, v) {

		var parsed = hljs.highlight('json', $(v).html().trim(), true);

		$(v).html(parsed.value);
	});

</script>