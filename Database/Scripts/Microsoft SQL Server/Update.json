[{"version":"1.0.130.2","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[log] ADD\r\n[metric] [bigint] NULL\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[log] DROP\r\nCOLUMN [authority_id],\r\nCOLUMN [authority],\r\nCOLUMN [context_authority_id],\r\nCOLUMN [context_authority],\r\nCOLUMN [context_property]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nEXEC sp_rename N'[tompit].[log].[service]', N'component', N'COLUMN'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nEXEC sp_rename N'[tompit].[log].[context_service]', N'element', N'COLUMN'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[metric]'\r\nGO\r\nCREATE TABLE [tompit].[metric]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[session] [uniqueidentifier] NOT NULL,\r\n[start] [datetime2] NOT NULL,\r\n[end] [datetime2] NULL,\r\n[result] [int] NULL,\r\n[instance] [int] NOT NULL,\r\n[request_ip] [varchar] (48) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[component] [uniqueidentifier] NOT NULL,\r\n[element] [uniqueidentifier] NULL,\r\n[parent] [uniqueidentifier] NULL,\r\n[request] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[response] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[consumption_in] [bigint] NULL,\r\n[consumption_out] [bigint] NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_metric] on [tompit].[metric]'\r\nGO\r\nALTER TABLE [tompit].[metric] ADD CONSTRAINT [PK_metric] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[metric_clr]'\r\nGO\r\nCREATE PROCEDURE [tompit].[metric_clr]\r\n\t@component uniqueidentifier = NULL,\r\n\t@element uniqueidentifier = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE \r\n\tFROM tompit.metric\r\n\tWHERE (@component IS NULL OR component = @component)\r\n\tAND (@element IS NULL OR element = @element);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[metric_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[metric_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.metric (session, start, [end], result, instance, request_ip, component, element, parent, request, response, consumption_in, consumption_out)\r\n\tSELECT session, start, [end], result, instance, request_ip, component, element, parent, request, response, consumption_in, consumption_out \r\n\tFROM OPENJSON (@items) WITH (session uniqueidentifier, start datetime2(7), [end] datetime2(7), result int, instance int, request_ip varchar(48),\r\n\t\tcomponent uniqueidentifier, element uniqueidentifier, parent uniqueidentifier, request nvarchar, response nvarchar, consumption_in bigint, consumption_out bigint); \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[metric_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[metric_que]\r\n\t@date date,\r\n\t@component uniqueidentifier,\r\n\t@element uniqueidentifier = NULL \r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.metric\r\n\tWHERE CAST([start] AS DATE) = @date\r\n\tAND (component = @component)\r\n\tAND (@element IS NULL OR element = @element); \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[log_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.log (created, message, trace_level, source, category, event_id, metric, component, element)\r\n\tSELECT created, message, trace_level, source, category, event_id, metric, component, element FROM OPENJSON (@items) WITH (created datetime2(7), message nvarchar(max), trace_level int, source nvarchar(1024), category nvarchar(128),\r\n\t\tevent_id int, metric bigint, component uniqueidentifier, element uniqueidentifier); \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log_que]'\r\nGO\r\nALTER PROCEDURE [tompit].[log_que]\r\n\t@date date,\r\n\t@component uniqueidentifier = NULL,\r\n\t@element uniqueidentifier = NULL,\r\n\t@metric bigint = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.log\r\n\tWHERE CAST(created AS DATE) = @date\r\n\tAND (@component IS NULL OR component = @component)\r\n\tAND (@element IS NULL OR element = @element)\r\n\tAND (metric IS NULL OR metric = @metric);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[metric_agg_day]'\r\nGO\r\nCREATE TABLE [tompit].[metric_agg_day]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[component] [uniqueidentifier] NOT NULL,\r\n[element] [uniqueidentifier] NULL,\r\n[date] [date] NOT NULL,\r\n[count] [int] NOT NULL,\r\n[success] [int] NOT NULL,\r\n[duration] [bigint] NOT NULL,\r\n[max] [int] NOT NULL,\r\n[min] [int] NOT NULL,\r\n[consumption_in] [bigint] NOT NULL,\r\n[consumption_out] [bigint] NOT NULL,\r\n[max_consumption_in] [bigint] NOT NULL,\r\n[min_consumption_out] [bigint] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_metric_agg_day] on [tompit].[metric_agg_day]'\r\nGO\r\nALTER TABLE [tompit].[metric_agg_day] ADD CONSTRAINT [PK_metric_agg_day] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.131.2","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[metric_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[metric_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.metric (session, start, [end], result, instance, request_ip, component, element, parent, request, response, consumption_in, consumption_out)\r\n\tSELECT session, start, [end], result, instance, request_ip, component, element, parent, request, response, consumption_in, consumption_out \r\n\tFROM OPENJSON (@items) WITH (session uniqueidentifier, start datetime2(7), [end] datetime2(7), result int, instance int, request_ip varchar(48),\r\n\t\tcomponent uniqueidentifier, element uniqueidentifier, parent uniqueidentifier, request nvarchar(max), response nvarchar(max), consumption_in bigint, consumption_out bigint); \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[log_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.log (created, message, trace_level, source, category, event_id, metric, component, element)\r\n\tSELECT created, message, trace_level, source, category, event_id, metric, component, element FROM OPENJSON (@items) WITH (created datetime2(7), message nvarchar(max), trace_level int, source nvarchar(1024), category nvarchar(128),\r\n\t\tevent_id int, metric uniqueidentifier, component uniqueidentifier, element uniqueidentifier); \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log_que]'\r\nGO\r\nALTER PROCEDURE [tompit].[log_que]\r\n\t@date date,\r\n\t@component uniqueidentifier = NULL,\r\n\t@element uniqueidentifier = NULL,\r\n\t@metric uniqueidentifier = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.log\r\n\tWHERE CAST(created AS DATE) = @date\r\n\tAND (@component IS NULL OR component = @component)\r\n\tAND (@element IS NULL OR element = @element)\r\n\tAND (metric IS NULL OR metric = @metric);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.203.3","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping foreign keys from [tompit].[component]'\r\nGO\r\nALTER TABLE [tompit].[component] DROP CONSTRAINT [FK_component_feature]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping foreign keys from [tompit].[feature]'\r\nGO\r\nALTER TABLE [tompit].[feature] DROP CONSTRAINT [FK_feature_service]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping constraints from [tompit].[feature]'\r\nGO\r\nALTER TABLE [tompit].[feature] DROP CONSTRAINT [PK_feature]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[feature_sel]'\r\nGO\r\nDROP PROCEDURE [tompit].[feature_sel]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[feature_que]'\r\nGO\r\nDROP PROCEDURE [tompit].[feature_que]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[feature_ins]'\r\nGO\r\nDROP PROCEDURE [tompit].[feature_ins]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[feature_del]'\r\nGO\r\nDROP PROCEDURE [tompit].[feature_del]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[view_feature]'\r\nGO\r\nDROP VIEW [tompit].[view_feature]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[feature_upd]'\r\nGO\r\nDROP PROCEDURE [tompit].[feature_upd]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[feature]'\r\nGO\r\nDROP TABLE [tompit].[feature]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[folder]'\r\nGO\r\nCREATE TABLE [tompit].[folder]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[parent] [int] NULL,\r\n[service] [int] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_folder] on [tompit].[folder]'\r\nGO\r\nALTER TABLE [tompit].[folder] ADD CONSTRAINT [PK_folder] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[component]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nEXEC sp_rename N'[tompit].[component].[feature]', N'folder', N'COLUMN'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_component]'\r\nGO\r\n\r\nALTER VIEW [tompit].[view_component]\r\nAS\r\nSELECT      c.id, c.name, c.token, c.type, c.category, c.runtime_configuration, c.modified,\r\n\t\t\tc.service, c.folder, f.token as folder_token, s.token AS [service_token]\r\nFROM        tompit.component AS c \r\nLEFT JOIN\ttompit.folder f on c.folder=f.id\r\nINNER JOIN\ttompit.service s on c.service = s.id\r\n\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[component_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[component_ins]\r\n\t@folder int = NULL,\r\n\t@name nvarchar(128),\r\n\t@token uniqueidentifier,\r\n\t@type nvarchar(512),\r\n\t@category nvarchar(128),\r\n\t@runtime_configuration uniqueidentifier = NULL,\r\n\t@modified datetime,\r\n\t@service int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tinsert tompit.component (folder, name, token, type, category, runtime_configuration, modified, service)\r\n\tvalues (@folder, @name, @token, @type, @category, @runtime_configuration, @modified, @service);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[component_upd]'\r\nGO\r\nALTER PROCEDURE [tompit].[component_upd]\r\n\t@id int,\r\n\t@name nvarchar(128),\r\n\t@modified datetime,\r\n\t@runtime_configuration uniqueidentifier = NULL,\r\n\t@folder int = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tupdate tompit.component set\r\n\t\tname = @name,\r\n\t\tmodified = @modified,\r\n\t\truntime_configuration = @runtime_configuration,\r\n\t\tfolder = @folder\r\n\twhere id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[folder_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[folder_ins]\r\n\t@service int,\r\n\t@name nvarchar(128),\r\n\t@token uniqueidentifier,\r\n\t@parent int = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tinsert folder (service, name, token, parent)\r\n\tvalues (@service, @name, @token, @parent);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[view_folder]'\r\nGO\r\n\r\n\r\n\r\n\r\n\r\n\r\nCREATE VIEW [tompit].[view_folder]\r\nAS\r\nSELECT        f.id, f.service, f.name, f.parent, f.token, s.token AS [service_token], fp.token as parent_token\r\nFROM            tompit.folder AS f \r\nINNER JOIN tompit.[service] AS s ON f.[service] = s.id\r\nLEFT JOIN tompit.folder fp on f.parent = fp.id\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[folder_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[folder_que]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tselect *\r\n\tfrom view_folder;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[folder_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[folder_sel]\r\n\t@service int = NULL,\r\n\t@name nvarchar(128) = null,\r\n\t@token uniqueidentifier = null\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tselect top 1 *\r\n\tfrom view_folder\r\n\twhere (@service IS NULL OR service = @service)\r\n\tand (@name is null or name = @name)\r\n\tand (@token is null or token = @token);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[folder_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[folder_upd]\r\n\t@id int,\r\n\t@name nvarchar(128),\r\n\t@parent int = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tupdate tompit.folder set\r\n\t\tname = @name,\r\n\t\tparent = @parent\r\n\twhere id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[folder_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[folder_del]\r\n\t@id int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tdelete folder \r\n\twhere id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[component]'\r\nGO\r\nALTER TABLE [tompit].[component] ADD CONSTRAINT [FK_component_folder] FOREIGN KEY ([folder]) REFERENCES [tompit].[folder] ([id])\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[folder]'\r\nGO\r\nALTER TABLE [tompit].[folder] ADD CONSTRAINT [FK_folder_folder1] FOREIGN KEY ([parent]) REFERENCES [tompit].[folder] ([id])\r\nGO\r\nALTER TABLE [tompit].[folder] ADD CONSTRAINT [FK_folder_service] FOREIGN KEY ([service]) REFERENCES [tompit].[service] ([id])\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.211.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping foreign keys from [tompit].[message_subscriber]'\r\nGO\r\nALTER TABLE [tompit].[message_subscriber] DROP CONSTRAINT [FK_message_subscriber_message_topic]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping foreign keys from [tompit].[message_recipient]'\r\nGO\r\nALTER TABLE [tompit].[message_recipient] DROP CONSTRAINT [FK_message_recipient_message_subscriber]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping constraints from [tompit].[message_subscriber]'\r\nGO\r\nALTER TABLE [tompit].[message_subscriber] DROP CONSTRAINT [PK_message_subscriber]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[log] ADD\r\n[date] [date] NULL\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating index [IX_log_2] on [tompit].[log]'\r\nGO\r\nCREATE NONCLUSTERED INDEX [IX_log_2] ON [tompit].[log] ([component]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating index [IX_log_1] on [tompit].[log]'\r\nGO\r\nCREATE NONCLUSTERED INDEX [IX_log_1] ON [tompit].[log] ([date]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating index [IX_log] on [tompit].[log]'\r\nGO\r\nCREATE NONCLUSTERED INDEX [IX_log] ON [tompit].[log] ([metric]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Rebuilding [tompit].[message_subscriber]'\r\nGO\r\nCREATE TABLE [tompit].[RG_Recovery_1_message_subscriber]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[connection] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[topic] [bigint] NOT NULL,\r\n[created] [datetime2] NOT NULL,\r\n[alive] [datetime2] NOT NULL,\r\n[instance] [uniqueidentifier] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nSET IDENTITY_INSERT [tompit].[RG_Recovery_1_message_subscriber] ON\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nINSERT INTO [tompit].[RG_Recovery_1_message_subscriber]([id], [connection], [topic], [created], [alive]) SELECT [id], [connection], [topic], [created], [alive] FROM [tompit].[message_subscriber]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nSET IDENTITY_INSERT [tompit].[RG_Recovery_1_message_subscriber] OFF\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @idVal BIGINT\r\nSELECT @idVal = IDENT_CURRENT(N'[tompit].[message_subscriber]')\r\nIF @idVal IS NOT NULL\r\n    DBCC CHECKIDENT(N'[tompit].[RG_Recovery_1_message_subscriber]', RESEED, @idVal)\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDROP TABLE [tompit].[message_subscriber]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nEXEC sp_rename N'[tompit].[RG_Recovery_1_message_subscriber]', N'message_subscriber', N'OBJECT'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_message_subscriber] on [tompit].[message_subscriber]'\r\nGO\r\nALTER TABLE [tompit].[message_subscriber] ADD CONSTRAINT [PK_message_subscriber] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[message_subscriber_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[message_subscriber_ins]\r\n\t@topic bigint,\r\n\t@connection nvarchar(128),\r\n\t@created datetime2(7),\r\n\t@alive datetime2(7),\r\n\t@instance uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tinsert tompit.message_subscriber (connection, topic, created, alive, instance)\r\n\tvalues (@connection, @topic, @created, @alive, @instance);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[message]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[message] ALTER COLUMN [message] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[message_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[message_ins]\r\n\t@topic bigint,\r\n\t@message nvarchar(MAX) = null,\r\n\t@created datetime2(7),\r\n\t@expire datetime2(7),\r\n\t@retry_interval int,\r\n\t@token uniqueidentifier,\r\n\t@sender_instance uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tdeclare @id bigint;\r\n\r\n\tinsert tompit.message (topic, message, created, expire, retry_interval, token)\r\n\tvalues (@topic, @message, @created, @expire, @retry_interval, @token);\r\n\r\n\tset @id = scope_identity();\r\n\r\n\tinsert tompit.message_recipient (message, subscriber, retry_count, next_visible)\r\n\tselect @id,  id, 0, DATEADD(s, @retry_interval, @created) from tompit.message_subscriber where topic = @topic AND instance != @sender_instance;\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_message_recipient]'\r\nGO\r\n\r\n\r\n\r\n\r\n\r\n\r\nALTER VIEW [tompit].[view_message_recipient]\r\nAS\r\nSELECT      r.id, r.message, r.subscriber, r.retry_count, r.next_visible, m.token message_token, m.topic, s.connection, t.name topic_name, m.message content\r\nFROM        tompit.message_recipient AS r \r\nINNER JOIN\ttompit.[message] AS m ON r.[message] = m.id\r\nINNER JOIN\ttompit.message_subscriber s on r.subscriber = s.id\r\nINNER JOIN\ttompit.message_topic t on m.topic = t.id\r\n\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[iot_state]'\r\nGO\r\nCREATE TABLE [tompit].[iot_state]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[hub] [uniqueidentifier] NOT NULL,\r\n[field] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[value] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[modified] [datetime2] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_iot_state] on [tompit].[iot_state]'\r\nGO\r\nALTER TABLE [tompit].[iot_state] ADD CONSTRAINT [PK_iot_state] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating index [IX_iot_state] on [tompit].[iot_state]'\r\nGO\r\nCREATE NONCLUSTERED INDEX [IX_iot_state] ON [tompit].[iot_state] ([hub]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[iot_state_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[iot_state_upd]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tMERGE tompit.iot_state AS d\r\n\tUSING (SELECT * FROM OPENJSON (@items) WITH (hub uniqueidentifier, field nvarchar(128), value nvarchar(1024))) AS s (hub, field, value)\r\n\tON (d.hub = s.hub AND d.field = s.field)\r\n\tWHEN NOT MATCHED BY TARGET THEN\r\n\t\tINSERT (hub, field, modified)\r\n\t\tVALUES (hub, field, GETUTCDATE())\r\n\tWHEN MATCHED THEN\r\n\t\tUPDATE SET\r\n\t\t\tvalue = s.value,\r\n\t\t\tmodified = GETUTCDATE();\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[iot_state_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[iot_state_sel]\r\n\t@hub uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.iot_state\r\n\tWHERE hub = @hub;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_message_subscriber]'\r\nGO\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nALTER VIEW [tompit].[view_message_subscriber]\r\nAS\r\nSELECT      s.id, s.connection, s.topic, s.created, s.alive, s.instance, t.name topic_name\r\nFROM        tompit.message_subscriber AS s\r\nINNER JOIN\ttompit.message_topic t on s.topic = t.id\r\n\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_message]'\r\nGO\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nALTER VIEW [tompit].[view_message]\r\nAS\r\nSELECT      m.id, m.message, m.topic, m.created, m.expire, m.retry_interval, m.token, t.name topic_name\r\nFROM        tompit.message AS m\r\nINNER JOIN\ttompit.message_topic t on m.topic = t.id\r\n\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[log_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.log (created, message, trace_level, source, category, event_id, metric, component, element, date)\r\n\tSELECT created, message, trace_level, source, category, event_id, metric, component, element, date FROM OPENJSON (@items) WITH (created datetime2(7), message nvarchar(max), trace_level int, source nvarchar(1024), category nvarchar(128),\r\n\t\tevent_id int, metric uniqueidentifier, component uniqueidentifier, element uniqueidentifier, date date); \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[log_que]'\r\nGO\r\nALTER PROCEDURE [tompit].[log_que]\r\n\t@date date = NULL,\r\n\t@component uniqueidentifier = NULL,\r\n\t@element uniqueidentifier = NULL,\r\n\t@metric uniqueidentifier = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tIF (@metric IS NOT NULL)\r\n\tBEGIN\r\n\t\tWITH\r\n\t\t  cteMetric (session, parent, level)\r\n\t\t  AS\r\n\t\t  (\r\n\t\t\tSELECT session, parent, 1\r\n\t\t\tFROM tompit.metric\r\n\t\t\tWHERE session = @metric\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT p.session, p.parent, m.level + 1\r\n\t\t\tFROM tompit.metric p\r\n\t\t\t  INNER JOIN cteMetric m\r\n\t\t\t\tON p.parent = m.session\r\n\t\t  )\r\n\t\tSELECT * \r\n\t\tFROM tompit.log\r\n\t\tWHERE (metric IN (SELECT session FROM cteMetric))\r\n\tEND\r\n\tELSE\r\n\tBEGIN\r\n\t\tSELECT * \r\n\t\tFROM tompit.log\r\n\t\tWHERE (@date IS NULL OR [date] = @date)\r\n\t\tAND (@component IS NULL OR component = @component)\r\n\t\tAND (@element IS NULL OR element = @element);\r\n\tEND\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating index [IX_metric_1] on [tompit].[metric]'\r\nGO\r\nCREATE NONCLUSTERED INDEX [IX_metric_1] ON [tompit].[metric] ([parent]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating index [IX_metric] on [tompit].[metric]'\r\nGO\r\nCREATE NONCLUSTERED INDEX [IX_metric] ON [tompit].[metric] ([session]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[message_subscriber]'\r\nGO\r\nALTER TABLE [tompit].[message_subscriber] ADD CONSTRAINT [FK_message_subscriber_message_topic] FOREIGN KEY ([topic]) REFERENCES [tompit].[message_topic] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[message_recipient]'\r\nGO\r\nALTER TABLE [tompit].[message_recipient] ADD CONSTRAINT [FK_message_recipient_message_subscriber] FOREIGN KEY ([subscriber]) REFERENCES [tompit].[message_subscriber] ([id])\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.215.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[service]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[service] ADD\r\n[configuration] [uniqueidentifier] NULL\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_component]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_component]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_service]'\r\nGO\r\n\r\n\r\n\r\n\r\nALTER VIEW [tompit].[view_service]\r\nAS\r\nSELECT        s.id, s.name, s.url, s.token, s.status, s.resource_group, s.template, s.meta,\r\n\t\t\t\ts.license, s.package, s.configuration, r.token AS resource_token\r\nFROM            tompit.service AS s INNER JOIN\r\n                         tompit.resource_group AS r ON s.resource_group = r.id\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_service_string]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_service_string]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_folder]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_folder]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer]'\r\nGO\r\nCREATE TABLE [tompit].[installer]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[package] [uniqueidentifier] NOT NULL,\r\n[parent] [uniqueidentifier] NULL,\r\n[status] [int] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_installer] on [tompit].[installer]'\r\nGO\r\nALTER TABLE [tompit].[installer] ADD CONSTRAINT [PK_installer] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding constraints to [tompit].[installer]'\r\nGO\r\nALTER TABLE [tompit].[installer] ADD CONSTRAINT [IX_installer] UNIQUE NONCLUSTERED  ([package]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.installer (package, parent, status)\r\n\tSELECT package, parent, 1 FROM OPENJSON(@items) WITH (package uniqueidentifier, parent uniqueidentifier);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_del]\r\n\t@package uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.installer SET parent = NULL WHERE parent = @package;\r\n\r\n\tUPDATE tompit.installer SET\r\n\t\tparent = NULL\r\n\tDELETE tompit.installer \r\n\tWHERE package = @package;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[service_upd]'\r\nGO\r\nALTER PROCEDURE [tompit].[service_upd]\r\n\t@id int,\r\n\t@name nvarchar(128),\r\n\t@url nvarchar(136),\r\n\t@status int,\r\n\t@template uniqueidentifier,\r\n\t@resource_group int,\r\n\t@package uniqueidentifier = NULL,\r\n\t@configuration uniqueidentifier = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tupdate [service] set\r\n\t\tname = @name,\r\n\t\turl = @url,\r\n\t\tstatus = @status,\r\n\t\ttemplate = @template,\r\n\t\tresource_group = @resource_group,\r\n\t\tpackage = @package,\r\n\t\tconfiguration = @configuration\r\n\twhere id = @id;\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_que]\r\n\t\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.installer;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_upd]\r\n\t@id int,\r\n\t@status int \r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.installer SET\r\n\t\tstatus = @status\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_sel]\r\n\t@package uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.installer \r\n\tWHERE package = @package;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.217.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[service_string_restore]'\r\nGO\r\nCREATE PROCEDURE [tompit].[service_string_restore]\r\n\t@items nvarchar(max)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tMERGE service_string AS d\r\n\tUSING (SELECT * FROM OPENJSON(@items) WITH ([service] int, element uniqueidentifier, property nvarchar(128), value nvarchar(MAX), language int)) AS s (service, element, property, value, language)\r\n\tON (d.service = s.service AND d.language = s.language AND d.element = s.element AND d.property = s.property)\r\n\tWHEN NOT MATCHED THEN\r\n\t\tINSERT (service, language, element, value, property)\r\n\t\tVALUES (s.service, s.language, s.element, s.value, s.property)\r\n\tWHEN MATCHED THEN\r\n\t\tUPDATE SET value = s.value;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.219.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_blob]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_blob]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[service]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[service] DROP\r\nCOLUMN [configuration]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_component]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_component]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_service]'\r\nGO\r\n\r\n\r\n\r\n\r\n\r\nALTER VIEW [tompit].[view_service]\r\nAS\r\nSELECT        s.id, s.name, s.url, s.token, s.status, s.resource_group, s.template, s.meta,\r\n\t\t\t\ts.license, s.package, r.token AS resource_token\r\nFROM            tompit.service AS s INNER JOIN\r\n                         tompit.resource_group AS r ON s.resource_group = r.id\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_service_string]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_service_string]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Refreshing [tompit].[view_folder]'\r\nGO\r\nEXEC sp_refreshview N'[tompit].[view_folder]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[service_upd]'\r\nGO\r\nALTER PROCEDURE [tompit].[service_upd]\r\n\t@id int,\r\n\t@name nvarchar(128),\r\n\t@url nvarchar(136),\r\n\t@status int,\r\n\t@template uniqueidentifier,\r\n\t@resource_group int,\r\n\t@package uniqueidentifier = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tupdate [service] set\r\n\t\tname = @name,\r\n\t\turl = @url,\r\n\t\tstatus = @status,\r\n\t\ttemplate = @template,\r\n\t\tresource_group = @resource_group,\r\n\t\tpackage = @package\r\n\twhere id = @id;\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_configuration]'\r\nGO\r\nCREATE TABLE [tompit].[installer_configuration]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[package] [uniqueidentifier] NOT NULL,\r\n[configuration] [uniqueidentifier] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_installer_configuration] on [tompit].[installer_configuration]'\r\nGO\r\nALTER TABLE [tompit].[installer_configuration] ADD CONSTRAINT [PK_installer_configuration] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding constraints to [tompit].[installer_configuration]'\r\nGO\r\nALTER TABLE [tompit].[installer_configuration] ADD CONSTRAINT [IX_installer_configuration] UNIQUE NONCLUSTERED  ([package]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_configuration_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_configuration_sel]\r\n\t@package uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 configuration\r\n\tFROM tompit.installer_configuration\r\n\tWHERE package = @package;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[installer_configuration_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[installer_configuration_ins]\r\n\t@package uniqueidentifier,\r\n\t@configuration uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.installer_configuration (package, configuration)\r\n\tVALUES (@package, @configuration);\r\n\t\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[blob_level_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[blob_level_que]\r\n\t@service uniqueidentifier,\r\n\t@level int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tselect *\r\n\tfrom view_blob \r\n\tWHERE (type < @level)\r\n\tand (service = @service);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.228.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[component]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[component] ADD\r\n[lock_status] [int] NOT NULL CONSTRAINT [DF_component_status] DEFAULT ((0)),\r\n[lock_user] [int] NULL,\r\n[lock_date] [datetime] NULL,\r\n[lock_verb] [int] NOT NULL CONSTRAINT [DF_component_lock_verb] DEFAULT ((0))\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[view_component]'\r\nGO\r\n\r\n\r\n\r\n\r\nALTER VIEW [tompit].[view_component]\r\nAS\r\nSELECT      c.id, c.name, c.token, c.type, c.category, c.runtime_configuration, c.modified,\r\n\t\t\tc.service, c.folder, c.lock_status, c.lock_date, c.lock_user, c.lock_verb,\r\n\t\t\tu.token lock_user_token,\r\n\t\t\tf.token as folder_token, s.token AS [service_token]\r\nFROM        tompit.component AS c \r\nLEFT JOIN\ttompit.folder f on c.folder=f.id\r\nLEFT JOIN\ttompit.[user] u ON c.lock_user = u.id\r\nINNER JOIN\ttompit.service s on c.service = s.id\r\n\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[installer]'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nALTER TABLE [tompit].[installer] ADD\r\n[error] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[modified] [datetime] NULL\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[installer_ins]'\r\nGO\r\nALTER PROCEDURE [tompit].[installer_ins]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tMERGE tompit.installer AS d\r\n\tUSING (SELECT * FROM OPENJSON (@items) WITH (package uniqueidentifier, parent uniqueidentifier)) AS s (package, parent)\r\n\tON (d.package = s.package)\r\n\tWHEN NOT MATCHED THEN\r\n\t\tINSERT (package, parent, status, modified)\r\n\t\tVALUES (s.package, s.parent, 1, GETUTCDATE())\r\n\tWHEN MATCHED THEN\r\n\t\tUPDATE SET\r\n\t\t\tstatus = 1,\r\n\t\t\tmodified = GETUTCDATE(),\r\n\t\t\tparent = s.parent,\r\n\t\t\terror = NULL;\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[installer_del]'\r\nGO\r\nALTER PROCEDURE [tompit].[installer_del]\r\n\t@package uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.installer SET parent = NULL WHERE parent = @package;\r\n\r\n\tDELETE tompit.installer \r\n\tWHERE package = @package;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[installer_upd]'\r\nGO\r\nALTER PROCEDURE [tompit].[installer_upd]\r\n\t@id int,\r\n\t@status int,\r\n\t@error nvarchar(MAX) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.installer SET\r\n\t\tstatus = @status,\r\n\t\terror = @error,\r\n\t\tmodified = GETUTCDATE()\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[install_audit]'\r\nGO\r\nCREATE TABLE [tompit].[install_audit]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[package] [uniqueidentifier] NOT NULL,\r\n[created] [datetime] NOT NULL,\r\n[message] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[type] [int] NOT NULL,\r\n[version] [varchar] (48) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_install_audit] on [tompit].[install_audit]'\r\nGO\r\nALTER TABLE [tompit].[install_audit] ADD CONSTRAINT [PK_install_audit] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[install_audit_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[install_audit_ins]\r\n\t@package uniqueidentifier,\r\n\t@created datetime,\r\n\t@message nvarchar(MAX) = NULL,\r\n\t@type int,\r\n\t@version varchar(48) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.install_audit (package, created, message, type, version)\r\n\tVALUES (@package, @created, @message, @type, @version);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[install_audit_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[install_audit_que]\r\n\t@package uniqueidentifier = NULL,\r\n\t@created datetime = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.install_audit\r\n\tWHERE (@package IS NULL OR package = @package)\r\n\tAND (@created IS NULL OR created >= @created);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_lock_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[component_lock_upd]\r\n\t@id int,\r\n\t@lock_status int,\r\n\t@lock_user int = NULL,\r\n\t@lock_date datetime = NULL,\r\n\t@lock_verb int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.component SET\r\n\t\tlock_status = @lock_status,\r\n\t\tlock_user = @lock_user,\r\n\t\tlock_date = @lock_date,\r\n\t\tlock_verb = @lock_verb\r\n\tWHERE id = @id; \r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[version_control_commit]'\r\nGO\r\nCREATE TABLE [tompit].[version_control_commit]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[created] [datetime] NOT NULL,\r\n[user] [int] NOT NULL,\r\n[comment] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[service] [uniqueidentifier] NOT NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_version_control_commit] on [tompit].[version_control_commit]'\r\nGO\r\nALTER TABLE [tompit].[version_control_commit] ADD CONSTRAINT [PK_version_control_commit] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[version_control_commit_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[version_control_commit_del]\r\n\t@id int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.version_control_commit\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_history]'\r\nGO\r\nCREATE TABLE [tompit].[component_history]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[created] [datetime] NOT NULL,\r\n[configuration] [uniqueidentifier] NOT NULL,\r\n[name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[user] [int] NOT NULL,\r\n[commit] [int] NULL,\r\n[component] [uniqueidentifier] NOT NULL,\r\n[verb] [int] NOT NULL CONSTRAINT [DF_component_history_verb] DEFAULT ((0))\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_component_history] on [tompit].[component_history]'\r\nGO\r\nALTER TABLE [tompit].[component_history] ADD CONSTRAINT [PK_component_history] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding constraints to [tompit].[component_history]'\r\nGO\r\nALTER TABLE [tompit].[component_history] ADD CONSTRAINT [IX_component_history] UNIQUE NONCLUSTERED  ([configuration]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[version_control_commit_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[version_control_commit_ins]\r\n\t@token uniqueidentifier,\r\n\t@service uniqueidentifier,\r\n\t@user int,\r\n\t@created datetime,\r\n\t@comment nvarchar(MAX),\r\n\t@components nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tdeclare @id int;\r\n\r\n\tINSERT tompit.version_control_commit (created, [user], service, comment, token)\r\n\tVALUES (@created, @user, @service, @comment, @token);\r\n\r\n\tset @id = scope_identity();\r\n\r\n\tUPDATE tompit.component SET\r\n\t\tlock_status = 0,\r\n\t\tlock_date = NULL,\r\n\t\tlock_user = NULL,\r\n\t\tlock_verb = 0\r\n\tWHERE token IN (SELECT  token FROM OPENJSON(@components) WITH (token uniqueidentifier));\r\n\r\n\tUPDATE tompit.component_history SET\r\n\t\t[commit] = @id\r\n\tWHERE component IN (SELECT token FROM OPENJSON(@components) WITH (token uniqueidentifier));\r\n\t\t\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_commit_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[component_commit_que]\r\n\t@commit int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT c.*\r\n\tFROM tompit.view_component c\r\n\tINNER JOIN tompit.component_history h\r\n\tON c.token = h.component\r\n\tWHERE h.[commit] = @commit;\r\n\t\t\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[version_control_commit_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[version_control_commit_que]\r\n\t@service uniqueidentifier,\r\n\t@component uniqueidentifier = NULL,\r\n\t@user int = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tIF (@component IS NULL)\r\n\t\tSELECT *\r\n\t\tFROM tompit.version_control_commit\r\n\t\tWHERE service = @service\r\n\t\tAND (@user IS NULL OR user = @user);\r\n\tELSE\r\n\t\tSELECT c.*\r\n\t\tFROM  tompit.component_history h\r\n\t\tINNER JOIN tompit.version_control_commit c ON h.[commit] = c.id\r\n\t\tINNER JOIN tompit.component cmp ON h.component = cmp.token\r\n\t\tWHERE (cmp.token = @component)\r\n\t\tAND (@user IS NULL OR c.[user] = @user);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[version_control_commit_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[version_control_commit_sel]\r\n\t@token uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.version_control_commit\r\n\tWHERE token = @token;\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_history_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[component_history_ins]\r\n\t@created datetime,\r\n\t@configuration uniqueidentifier,\r\n\t@name nvarchar(128),\r\n\t@user int,\r\n\t@component uniqueidentifier,\r\n\t@verb int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.component_history (created, configuration, name, [user], [commit], component, verb)\r\n\tVALUES (@created, @configuration, @name, @user, NULL, @component, @verb);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_history_undo]'\r\nGO\r\nCREATE PROCEDURE [tompit].[component_history_undo]\r\n\t@component uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.component_history \r\n\tWHERE component = @component\r\n\tAND [commit] IS NULL;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_history_view]'\r\nGO\r\n\r\n\r\n\r\nCREATE VIEW [tompit].[component_history_view]\r\nAS\r\n\r\nSELECT h.id, h.created, h.configuration, h.name, h.[user], h.[commit], h.component, h.verb, \r\n\t\tc.token commit_token,\r\n\t\tu.token user_token\r\nFROM tompit.component_history h\r\nINNER JOIN tompit.[user] u ON h.[user] = u.id\r\nLEFT JOIN tompit.version_control_commit c ON h.[commit] = c.id;\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[component_history_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[component_history_que]\r\n\t@component uniqueidentifier = NULL,\r\n\t@commit int = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.component_history_view \r\n\tWHERE (@component IS NULL OR component = @component)\r\n\tAND (@commit IS NULL OR [commit] = @commit);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[user_data]'\r\nGO\r\nCREATE TABLE [tompit].[user_data]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[topic] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[user] [int] NOT NULL,\r\n[primary_key] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[value] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_user_data] on [tompit].[user_data]'\r\nGO\r\nALTER TABLE [tompit].[user_data] ADD CONSTRAINT [PK_user_data] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding constraints to [tompit].[user_data]'\r\nGO\r\nALTER TABLE [tompit].[user_data] ADD CONSTRAINT [IX_user_data] UNIQUE NONCLUSTERED  ([user], [primary_key]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[user_data_mdf]'\r\nGO\r\nCREATE PROCEDURE [tompit].[user_data_mdf]\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tMERGE tompit.user_data AS d\r\n\tUSING (SELECT topic, [user], primary_key, value FROM OPENJSON(@items) WITH (topic nvarchar(128), [user] int, primary_key nvarchar(256), value nvarchar(MAX))) \r\n\tAS s (topic, [user], primary_key, value)\r\n\tON ((s.topic IS NULL OR d.topic = s.topic) AND d.[user] = s.[user] AND d.primary_key = s.primary_key)\r\n\tWHEN NOT MATCHED THEN\r\n\t\tINSERT (topic, [user], primary_key, value)\r\n\t\tVALUES (s.topic, s.[user], s.primary_key, s.value)\r\n\tWHEN MATCHED THEN\r\n\t\tUPDATE SET\r\n\t\t\tvalue = s.value;\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[user_data_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[user_data_que]\r\n\t@user int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.user_data\r\n\tWHERE [user] = @user\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[component]'\r\nGO\r\nALTER TABLE [tompit].[component] ADD CONSTRAINT [FK_component_user] FOREIGN KEY ([lock_user]) REFERENCES [tompit].[user] ([id])\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[component_history]'\r\nGO\r\nALTER TABLE [tompit].[component_history] ADD CONSTRAINT [FK_component_history_user] FOREIGN KEY ([user]) REFERENCES [tompit].[user] ([id])\r\nGO\r\nALTER TABLE [tompit].[component_history] ADD CONSTRAINT [FK_component_history_version_control_commit] FOREIGN KEY ([commit]) REFERENCES [tompit].[version_control_commit] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[user_data]'\r\nGO\r\nALTER TABLE [tompit].[user_data] ADD CONSTRAINT [FK_user_data_user] FOREIGN KEY ([user]) REFERENCES [tompit].[user] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.312.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_queue]'\r\nGO\r\nCREATE TABLE [tompit].[mail_queue]\r\n(\r\n[id] [bigint] NOT NULL,\r\n[created] [datetime] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[from] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[to] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[next_visible] [datetime] NOT NULL,\r\n[expire] [smalldatetime] NOT NULL,\r\n[pop_receipt] [uniqueidentifier] NULL,\r\n[dequeue_count] [int] NOT NULL,\r\n[dequeue_timestamp] [datetime] NULL,\r\n[subject] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[body] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[headers] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[attachment_count] [int] NOT NULL,\r\n[error] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[format] [int] NOT NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_mail_queue] on [tompit].[mail_queue]'\r\nGO\r\nALTER TABLE [tompit].[mail_queue] ADD CONSTRAINT [PK_mail_queue] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_reset]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_reset]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\t UPDATE tompit.mail_queue SET\r\n\t\terror = null,\r\n\t\tnext_visible = getutcdate(),\r\n\t\tpop_receipt = null,\r\n\t\tdequeue_count = 0\r\n\twhere id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_sel]\r\n\t@token uniqueidentifier,\r\n\t@pop_receipt uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT top 1 *\r\n\tFROM tompit.mail_queue \r\n\tWHERE (@token IS NULL OR token = @token)\r\n\tAND (@pop_receipt IS NULL OR pop_receipt = @pop_receipt);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_upd]\r\n\t\t@next_visible datetime,\r\n\t\t@error nvarchar(1024) = null,\r\n\t\t@pop_receipt uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.mail_queue SET\r\n\t\terror = @error,\r\n\t\tnext_visible = @next_visible,\r\n\t\tpop_receipt = null\r\n\twhere pop_receipt = @pop_receipt;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber]'\r\nGO\r\nCREATE TABLE [tompit].[subscriber]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[subscription] [bigint] NOT NULL,\r\n[resource_type] [int] NOT NULL,\r\n[resource_primary_key] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_subscriber] on [tompit].[subscriber]'\r\nGO\r\nALTER TABLE [tompit].[subscriber] ADD CONSTRAINT [PK_subscriber] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscriber_del]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.subscriber\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscriber_ins]\r\n\t@subscription bigint,\r\n\t@resource_type int,\r\n\t@resource_primary_key nvarchar(128)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.subscriber (subscription, resource_type, resource_primary_key)\r\n\tVALUES (@subscription, @resource_type, @resource_primary_key);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscriber_que]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.subscriber \r\n\tWHERE (id = @id)\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscriber_sel]\r\n\t@subscription bigint,\r\n\t@resource_type int,\r\n\t@resource_primary_key nvarchar(128)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.subscriber \r\n\tWHERE (subscription = @subscription)\r\n\tAND (resource_type = @resource_type)\r\n\tAND (resource_primary_key = @resource_primary_key);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription]'\r\nGO\r\nCREATE TABLE [tompit].[subscription]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[token] [uniqueidentifier] NOT NULL,\r\n[handler] [uniqueidentifier] NOT NULL,\r\n[topic] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[primary_key] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_subscription] on [tompit].[subscription]'\r\nGO\r\nALTER TABLE [tompit].[subscription] ADD CONSTRAINT [PK_subscription] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding constraints to [tompit].[subscription]'\r\nGO\r\nALTER TABLE [tompit].[subscription] ADD CONSTRAINT [IX_subscription] UNIQUE NONCLUSTERED  ([handler], [primary_key], [topic]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_del]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.subscription\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_event]'\r\nGO\r\nCREATE TABLE [tompit].[subscription_event]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[subscription] [bigint] NOT NULL,\r\n[name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[created] [datetime2] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[arguments] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_subscription_event] on [tompit].[subscription_event]'\r\nGO\r\nALTER TABLE [tompit].[subscription_event] ADD CONSTRAINT [PK_subscription_event] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_event_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_event_del]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.subscription_event\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_event_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_event_ins]\r\n\t@token uniqueidentifier,\r\n\t@subscription bigint,\r\n\t@name nvarchar(128),\r\n\t@created datetime2(7),\r\n\t@arguments nvarchar(MAX) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.subscription_event (token, subscription, name, created, arguments)\r\n\tVALUES (@token, @subscription, @name, @created, @arguments);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_event_view]'\r\nGO\r\nCREATE VIEW [tompit].[subscription_event_view]\r\nAS\r\n\r\nSELECT\te.id, e.token, e.subscription, e.name, e.created, e.arguments,\r\n\t\ts.handler, s.primary_key, s.topic, s.token subscription_token\r\nFROM tompit.subscription_event e\r\nINNER JOIN tompit.subscription s ON e.subscription= s.id\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_event_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_event_que]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.subscription_event_view;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_event_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_event_sel]\r\n\t@token uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.subscription_event_view\r\n\tWHERE token = @token;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_ins]\r\n\t@token uniqueidentifier,\r\n\t@handler uniqueidentifier,\r\n\t@topic nvarchar(128) = NULL,\r\n\t@primary_key nvarchar(128)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.subscription (token, handler, topic, primary_key)\r\n\tVALUES (@token, @handler, @topic, @primary_key);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_sel]\r\n\t@token uniqueidentifier = NULL,\r\n\t@handler uniqueidentifier = NULL,\r\n\t@topic nvarchar(128) = NULL,\r\n\t@primary_key nvarchar(128) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.subscription \r\n\tWHERE (@token IS NULL OR token = @token)\r\n\tAND (@handler IS NULL OR handler = @handler)\r\n\tAND (@topic IS NULL OR topic = @topic)\r\n\tAND (@primary_key IS NULL OR primary_key = @primary_key)\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscription_clr]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscription_clr]\r\n\t@handler uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.subscription\r\n\tWHERE handler = @handler;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien]'\r\nGO\r\nCREATE TABLE [tompit].[alien]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[first_name] [nvarchar] (64) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[last_name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[email] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[mobile] [varchar] (48) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[phone] [varchar] (48) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[language] [int] NULL,\r\n[timezone] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_alien] on [tompit].[alien]'\r\nGO\r\nALTER TABLE [tompit].[alien] ADD CONSTRAINT [PK_alien] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[alien_ins]\r\n\t@first_name nvarchar(64) = NULL,\r\n\t@last_name nvarchar(128) = NULL,\r\n\t@email nvarchar(256) = NULL,\r\n\t@mobile varchar(48) = NULL,\r\n\t@phone varchar(48) = NULL,\r\n\t@token uniqueidentifier,\r\n\t@language int = NULL,\r\n\t@timezone nvarchar(256) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.alien (first_name, last_name, email, mobile, phone, token, language, timezone)\r\n\tVALUES (@first_name, @last_name, @email, @mobile, @phone, @token, @language, @timezone);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[alien_upd]\r\n\t@id bigint,\r\n\t@first_name nvarchar(64) = NULL,\r\n\t@last_name nvarchar(128) = NULL,\r\n\t@email nvarchar(256) = NULL,\r\n\t@mobile varchar(48) = NULL,\r\n\t@phone varchar(48) = NULL,\r\n\t@language int = NULL,\r\n\t@timezone nvarchar(256) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.alien SET\r\n\t\tfirst_name = @first_name, \r\n\t\tlast_name = @last_name, \r\n\t\temail = @email, \r\n\t\tmobile = @mobile, \r\n\t\tphone = @phone, \r\n\t\tlanguage = @language, \r\n\t\ttimezone = @timezone\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[alien_del]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.alien \r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien_view]'\r\nGO\r\nCREATE VIEW [tompit].[alien_view]\r\nAS\r\n\r\nSELECT a.id, a.token, a.first_name, a.last_name, a.email, a.mobile, a.phone, a.language, a.timezone,\r\n\t\tl.token language_token\r\nFROM tompit.alien a\r\nLEFT JOIN tompit.language l ON a.language = l.id\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[alien_que]\r\n\t\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.alien_view ;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[alien_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[alien_sel]\r\n\t@token uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.alien_view \r\n\tWHERE token = @token;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_suite]'\r\nGO\r\nCREATE TABLE [tompit].[test_suite]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[suite] [uniqueidentifier] NOT NULL,\r\n[run_count] [int] NOT NULL,\r\n[success_count] [int] NOT NULL,\r\n[service] [int] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_test_suite] on [tompit].[test_suite]'\r\nGO\r\nALTER TABLE [tompit].[test_suite] ADD CONSTRAINT [PK_test_suite] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_suite_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_suite_del]\r\n\t@id int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.test_suite\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session]'\r\nGO\r\nCREATE TABLE [tompit].[test_session]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[suite] [int] NOT NULL,\r\n[start] [datetime2] NOT NULL,\r\n[complete] [datetime2] NULL,\r\n[status] [int] NOT NULL,\r\n[result] [int] NOT NULL,\r\n[error] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[token] [uniqueidentifier] NOT NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_test_session] on [tompit].[test_session]'\r\nGO\r\nALTER TABLE [tompit].[test_session] ADD CONSTRAINT [PK_test_session] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_ins]\r\n\t@suite int,\r\n\t@start datetime2(7),\r\n\t@token uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.test_session (suite, start, status, result, token)\r\n\tVALUES (@suite, @start, 1, 1, @token);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_scenario]'\r\nGO\r\nCREATE TABLE [tompit].[test_session_scenario]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[session] [bigint] NOT NULL,\r\n[scenario] [uniqueidentifier] NOT NULL,\r\n[start] [datetime2] NOT NULL,\r\n[complete] [datetime2] NULL,\r\n[status] [int] NOT NULL,\r\n[result] [int] NOT NULL,\r\n[error] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_test_session_scenario] on [tompit].[test_session_scenario]'\r\nGO\r\nALTER TABLE [tompit].[test_session_scenario] ADD CONSTRAINT [PK_test_session_scenario] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_scenario_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_scenario_ins]\r\n\t@session bigint,\r\n\t@scenario uniqueidentifier,\r\n\t@start datetime2(7)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.test_session_scenario ([session], scenario, start, status, result)\r\n\tVALUES (@session, @scenario, @start, 1, 1);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_scenario_view]'\r\nGO\r\nCREATE VIEW [tompit].[test_session_scenario_view]\r\nAS\r\n\r\nSELECT s.id, s.session, s.scenario, s.start, s.complete, s.status, s.result, s.error,\r\n\t\tss.token session_token\r\nFROM tompit.test_session_scenario s\r\nINNER JOIN tompit.test_session ss ON s.session = ss.id;\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_scenario_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_scenario_que]\r\n\t@session bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.test_session_scenario_view\r\n\tWHERE session = @session;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_view]'\r\nGO\r\n\r\nCREATE VIEW [tompit].[test_session_view]\r\nAS\r\n\r\nSELECT s.id, s.suite, s.start, s.complete, s.status, s.result, s.error, s.token,\r\n\t\tst.suite suite_token\r\nFROM tompit.test_session s\r\nINNER JOIN tompit.test_suite st ON s.suite = st.id;\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_que]\r\n\t@suite int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.test_session_view\r\n\tWHERE suite = @suite;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_case]'\r\nGO\r\nCREATE TABLE [tompit].[test_session_case]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[scenario] [bigint] NOT NULL,\r\n[test_case] [uniqueidentifier] NOT NULL,\r\n[start] [datetime2] NOT NULL,\r\n[complete] [datetime2] NULL,\r\n[status] [int] NOT NULL,\r\n[result] [int] NOT NULL,\r\n[error] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_test_session_case] on [tompit].[test_session_case]'\r\nGO\r\nALTER TABLE [tompit].[test_session_case] ADD CONSTRAINT [PK_test_session_case] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_case_view]'\r\nGO\r\nCREATE VIEW [tompit].[test_session_case_view]\r\nAS\r\n\r\nSELECT s.id, s.scenario, s.test_case, s.start, s.complete, s.status, s.result, s.error,\r\n\t\tsc.scenario scenario_token\r\nFROM tompit.test_session_case s\r\nINNER JOIN tompit.test_session_scenario sc ON s.scenario = sc.id;\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_case_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_case_que]\r\n\t@scenario int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.test_session_case_view\r\n\tWHERE scenario = @scenario;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_scenario_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_scenario_sel]\r\n\t@session int,\r\n\t@scenario uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 * \r\n\tFROM tompit.test_session_scenario_view\r\n\tWHERE [session] = @session\r\n\tAND scenario = @scenario;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_sel]\r\n\t@token uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 * \r\n\tFROM tompit.test_session_view\r\n\tWHERE token = @token;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_suite_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_suite_sel]\r\n\t@suite uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 * \r\n\tFROM tompit.test_suite\r\n\tWHERE suite = @suite;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_case_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_case_sel]\r\n\t@scenario bigint,\r\n\t@test_case uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 * \r\n\tFROM tompit.test_session_case_view\r\n\tWHERE scenario = @scenario\r\n\tAND test_case = @test_case;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_upd]\r\n\t@id bigint,\r\n\t@status int,\r\n\t@result int,\r\n\t@complete datetime2(7) = NULL,\r\n\t@error nvarchar(MAX) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.test_session SET\r\n\t\tstatus = @status,\r\n\t\tresult = @result,\r\n\t\tcomplete = @complete,\r\n\t\terror = @error\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_scenario_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_scenario_upd]\r\n\t@id bigint,\r\n\t@status int,\r\n\t@result int,\r\n\t@complete datetime2(7) = NULL,\r\n\t@error nvarchar(MAX) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.test_session_scenario SET\r\n\t\tstatus = @status,\r\n\t\tresult = @result,\r\n\t\tcomplete = @complete,\r\n\t\terror = @error\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[test_session_case_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[test_session_case_upd]\r\n\t@id bigint,\r\n\t@status int,\r\n\t@result int,\r\n\t@complete datetime2(7) = NULL,\r\n\t@error nvarchar(MAX) = NULL\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.test_session_case SET\r\n\t\tstatus = @status,\r\n\t\tresult = @result,\r\n\t\tcomplete = @complete,\r\n\t\terror = @error\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_dequeue]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_dequeue]\r\n\t@next_visible datetime,\r\n\t@date datetime,\r\n\t@count int = 32\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tdeclare @ct table(num bigint);\r\n\r\n\twith q as\r\n\t\t(\r\n\t\t\tselect top (@count) *\r\n\t\t\tfrom tompit.mail_queue with (readpast)\r\n\t\t\twhere next_visible < @date\r\n\t\t\tand expire > @date\r\n\t\t\torder by next_visible, id\r\n\t\t)\r\n\t update  q with (UPDLOCK, READPAST) set\r\n\t\tnext_visible = @next_visible,\r\n\t\tdequeue_count = dequeue_count + 1,\r\n\t\tdequeue_timestamp = @date,\r\n\t\tpop_receipt = newid()\r\n\toutput inserted.id into @ct;\r\n\r\n\tselect * from tompit.mail_queue where id IN (select num from @ct);\t\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_queue_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_queue_del]\r\n\t@pop_receipt uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.mail_queue\r\n\tWHERE pop_receipt = @pop_receipt;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_ins]\r\n\t@created datetime,\r\n\t@token uniqueidentifier,\r\n\t@from nvarchar(256),\r\n\t@to nvarchar(256),\r\n\t@next_visible datetime,\r\n\t@expire smalldatetime,\r\n\t@subject nvarchar(256),\r\n\t@body nvarchar(MAX) = NULL,\r\n\t@headers nvarchar(MAX) = NULL,\r\n\t@attachment_count int,\r\n\t@format int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.mail_queue (created, token, [from], [to], next_visible, expire, dequeue_count, subject, body, \r\n\t\theaders, attachment_count, [format])\r\n\tVALUES (@created, @token, @from, @to, @next_visible, @expire, 0, @subject, @body, \r\n\t\t@headers, @attachment_count, @format);\r\n\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_clr]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_clr]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tdelete tompit.mail_queue;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_del]\r\n\t@id bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.mail_queue \r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[mail_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[mail_que]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.mail_queue;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber_claim]'\r\nGO\r\nCREATE TABLE [tompit].[subscriber_claim]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[claim] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[handler] [uniqueidentifier] NOT NULL,\r\n[topic] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_subscriber_claim] on [tompit].[subscriber_claim]'\r\nGO\r\nALTER TABLE [tompit].[subscriber_claim] ADD CONSTRAINT [PK_subscriber_claim] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[alien]'\r\nGO\r\nALTER TABLE [tompit].[alien] ADD CONSTRAINT [FK_alien_language] FOREIGN KEY ([language]) REFERENCES [tompit].[language] ([id])\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[subscriber]'\r\nGO\r\nALTER TABLE [tompit].[subscriber] ADD CONSTRAINT [FK_subscriber_subscription] FOREIGN KEY ([subscription]) REFERENCES [tompit].[subscription] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[subscription_event]'\r\nGO\r\nALTER TABLE [tompit].[subscription_event] ADD CONSTRAINT [FK_subscription_event_subscription] FOREIGN KEY ([subscription]) REFERENCES [tompit].[subscription] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[test_session_scenario]'\r\nGO\r\nALTER TABLE [tompit].[test_session_scenario] ADD CONSTRAINT [FK_test_session_scenario_test_session] FOREIGN KEY ([session]) REFERENCES [tompit].[test_session] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[test_session]'\r\nGO\r\nALTER TABLE [tompit].[test_session] ADD CONSTRAINT [FK_test_session_test_suite] FOREIGN KEY ([suite]) REFERENCES [tompit].[test_suite] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[test_session_case]'\r\nGO\r\nALTER TABLE [tompit].[test_session_case] ADD CONSTRAINT [FK_test_session_case_test_session_scenario] FOREIGN KEY ([scenario]) REFERENCES [tompit].[test_session_scenario] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[test_suite]'\r\nGO\r\nALTER TABLE [tompit].[test_suite] ADD CONSTRAINT [FK_test_suite_service] FOREIGN KEY ([service]) REFERENCES [tompit].[service] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.312.2","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping constraints from [tompit].[subscriber_claim]'\r\nGO\r\nALTER TABLE [tompit].[subscriber_claim] DROP CONSTRAINT [PK_subscriber_claim]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping [tompit].[subscriber_claim]'\r\nGO\r\nDROP TABLE [tompit].[subscriber_claim]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[view_subscriber]'\r\nGO\r\nCREATE VIEW [tompit].[view_subscriber]\r\nAS\r\n\r\nSELECT s.id, s.subscription, s.resource_type, s.resource_primary_key,\r\n\tsu.token subscription_token\r\nFROM tompit.subscriber s\r\nINNER JOIN tompit.subscription su ON s.subscription = su.id\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[subscriber_que]'\r\nGO\r\nALTER PROCEDURE [tompit].[subscriber_que]\r\n\t@subscription bigint\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.view_subscriber\r\n\tWHERE (subscription = @subscription)\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Altering [tompit].[subscriber_sel]'\r\nGO\r\nALTER PROCEDURE [tompit].[subscriber_sel]\r\n\t@subscription bigint,\r\n\t@resource_type int,\r\n\t@resource_primary_key nvarchar(128)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.view_subscriber \r\n\tWHERE (subscription = @subscription)\r\n\tAND (resource_type = @resource_type)\r\n\tAND (resource_primary_key = @resource_primary_key);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[subscriber_ins_batch]'\r\nGO\r\nCREATE PROCEDURE [tompit].[subscriber_ins_batch]\r\n\t@subscription bigint,\r\n\t@items nvarchar(MAX)\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tMERGE tompit.subscriber d\r\n\tUSING (SELECT resource_type, resource_primary_key FROM OPENJSON(@items) WITH (resource_type int, resource_primary_key nvarchar(128))) AS s (resource_type, resource_primary_key)\r\n\tON (d.subscription = @subscription AND d.resource_type = s.resource_type AND d.resource_primary_key = s.resource_primary_key)\r\n\tWHEN NOT MATCHED THEN\r\n\tINSERT (subscription, resource_type, resource_primary_key)\r\n\tVALUES (@subscription, s.resource_type, s.resource_primary_key);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"},{"version":"1.0.318.1","content":"\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\nSET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON\r\nGO\r\nSET XACT_ABORT ON\r\nGO\r\nSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\r\nGO\r\nBEGIN TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Dropping constraints from [tompit].[mail_queue]'\r\nGO\r\nALTER TABLE [tompit].[mail_queue] DROP CONSTRAINT [PK_mail_queue]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Rebuilding [tompit].[mail_queue]'\r\nGO\r\nCREATE TABLE [tompit].[RG_Recovery_1_mail_queue]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[created] [datetime] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[from] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[to] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[next_visible] [datetime] NOT NULL,\r\n[expire] [smalldatetime] NOT NULL,\r\n[pop_receipt] [uniqueidentifier] NULL,\r\n[dequeue_count] [int] NOT NULL,\r\n[dequeue_timestamp] [datetime] NULL,\r\n[subject] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[body] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[headers] [nvarchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[attachment_count] [int] NOT NULL,\r\n[error] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[format] [int] NOT NULL\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nSET IDENTITY_INSERT [tompit].[RG_Recovery_1_mail_queue] ON\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nINSERT INTO [tompit].[RG_Recovery_1_mail_queue]([id], [created], [token], [from], [to], [next_visible], [expire], [pop_receipt], [dequeue_count], [dequeue_timestamp], [subject], [body], [headers], [attachment_count], [error], [format]) SELECT [id], [created], [token], [from], [to], [next_visible], [expire], [pop_receipt], [dequeue_count], [dequeue_timestamp], [subject], [body], [headers], [attachment_count], [error], [format] FROM [tompit].[mail_queue]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nSET IDENTITY_INSERT [tompit].[RG_Recovery_1_mail_queue] OFF\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDROP TABLE [tompit].[mail_queue]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nEXEC sp_rename N'[tompit].[RG_Recovery_1_mail_queue]', N'mail_queue', N'OBJECT'\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_mail_queue] on [tompit].[mail_queue]'\r\nGO\r\nALTER TABLE [tompit].[mail_queue] ADD CONSTRAINT [PK_mail_queue] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_partition]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_partition]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[configuration] [uniqueidentifier] NOT NULL,\r\n[file_count] [int] NOT NULL,\r\n[status] [int] NOT NULL,\r\n[name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[created] [smalldatetime] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_partition] on [tompit].[big_data_partition]'\r\nGO\r\nALTER TABLE [tompit].[big_data_partition] ADD CONSTRAINT [PK_big_data_partition] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding constraints to [tompit].[big_data_partition]'\r\nGO\r\nALTER TABLE [tompit].[big_data_partition] ADD CONSTRAINT [IX_big_data_partition] UNIQUE NONCLUSTERED  ([configuration]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_partition_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_partition_ins]\r\n\t@configuration uniqueidentifier,\r\n\t@status int,\r\n\t@name nvarchar(128),\r\n\t@created smalldatetime\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.big_data_partition (configuration, file_count, status, name, created)\r\n\tVALUES (@configuration, 0, @status, @name, @created);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_partition_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_partition_upd]\r\n\t@id int,\r\n\t@status int,\r\n\t@name nvarchar(128),\r\n\t@file_count int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.big_data_partition SET\r\n\t\tfile_count = @file_count, \r\n\t\tstatus = @status, \r\n\t\tname = @name\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_partition_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_partition_que]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT *\r\n\tFROM tompit.big_data_partition;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_partition_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_partition_sel]\r\n\t@configuration uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 *\r\n\tFROM tompit.big_data_partition\r\n\tWHERE configuration = @configuration;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_node]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_node]\r\n(\r\n[id] [int] NOT NULL IDENTITY(1, 1),\r\n[name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[connection_string] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,\r\n[admin_connection_string] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[status] [int] NOT NULL,\r\n[size] [bigint] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_node] on [tompit].[big_data_node]'\r\nGO\r\nALTER TABLE [tompit].[big_data_node] ADD CONSTRAINT [PK_big_data_node] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_node_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_node_del]\r\n\t@id int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.big_data_node\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_node_ins]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_node_ins]\r\n\t@name nvarchar(128),\r\n\t@connection_string nvarchar(256),\r\n\t@admin_connection_string nvarchar(256) = NULL,\r\n\t@token uniqueidentifier,\r\n\t@status int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tINSERT tompit.big_data_node (name, connection_string, admin_connection_string, token, status, size)\r\n\tVALUES (@name, @connection_string, @admin_connection_string, @token, @status, 0);\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_node_upd]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_node_upd]\r\n\t@name nvarchar(128),\r\n\t@connection_string nvarchar(256),\r\n\t@admin_connection_string nvarchar(256) = NULL,\r\n\t@token uniqueidentifier,\r\n\t@status int,\r\n\t@size bigint,\r\n\t@id int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tUPDATE tompit.big_data_node SET\r\n\t\tname = @name, \r\n\t\tconnection_string = @connection_string, \r\n\t\tadmin_connection_string = @admin_connection_string, \r\n\t\tstatus = @status, \r\n\t\tsize = @size\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_node_que]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_node_que]\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT * \r\n\tFROM tompit.big_data_node;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_node_sel]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_node_sel]\r\n\t@token uniqueidentifier\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tSELECT TOP 1 * \r\n\tFROM tompit.big_data_node\r\n\tWHERE token = @token;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_partition_del]'\r\nGO\r\nCREATE PROCEDURE [tompit].[big_data_partition_del]\r\n\t@id int\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\r\n\tDELETE tompit.big_data_partition\r\n\tWHERE id = @id;\r\nEND\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_index]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_index]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[start_timestamp] [datetime2] NULL,\r\n[end_timestamp] [datetime2] NULL,\r\n[count] [int] NOT NULL,\r\n[status] [int] NOT NULL,\r\n[node] [int] NOT NULL,\r\n[file] [uniqueidentifier] NOT NULL,\r\n[partition] [int] NOT NULL,\r\n[key] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_index] on [tompit].[big_data_index]'\r\nGO\r\nALTER TABLE [tompit].[big_data_index] ADD CONSTRAINT [PK_big_data_index] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_index_field]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_index_field]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[index] [bigint] NOT NULL,\r\n[start_string] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[end_string] [nvarchar] (256) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,\r\n[start_number] [float] NULL,\r\n[end_number] [float] NULL,\r\n[field_name] [nvarchar] (128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_index_field] on [tompit].[big_data_index_field]'\r\nGO\r\nALTER TABLE [tompit].[big_data_index_field] ADD CONSTRAINT [PK_big_data_index_field] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_transaction]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_transaction]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[block_count] [int] NOT NULL,\r\n[block_remaining] [int] NOT NULL,\r\n[created] [datetime] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[status] [int] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_transaction] on [tompit].[big_data_transaction]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction] ADD CONSTRAINT [PK_big_data_transaction] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_transaction_block]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_transaction_block]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[transaction] [bigint] NOT NULL,\r\n[worker_remaining] [int] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_transaction_block] on [tompit].[big_data_transaction_block]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_block] ADD CONSTRAINT [PK_big_data_transaction_block] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_transaction_defer]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_transaction_defer]\r\n(\r\n[id] [bigint] NOT NULL IDENTITY(1, 1),\r\n[partition] [int] NOT NULL,\r\n[file] [uniqueidentifier] NOT NULL,\r\n[next_visible] [datetime2] NOT NULL,\r\n[worker] [bigint] NOT NULL,\r\n[pop_receipt] [uniqueidentifier] NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_transaction_defer] on [tompit].[big_data_transaction_defer]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_defer] ADD CONSTRAINT [PK_big_data_transaction_defer] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating [tompit].[big_data_transaction_worker]'\r\nGO\r\nCREATE TABLE [tompit].[big_data_transaction_worker]\r\n(\r\n[id] [bigint] NOT NULL,\r\n[block] [bigint] NOT NULL,\r\n[status] [int] NOT NULL,\r\n[token] [uniqueidentifier] NOT NULL,\r\n[configuration] [uniqueidentifier] NOT NULL,\r\n[next_visible] [datetime2] NOT NULL,\r\n[has_dependencies] [bit] NOT NULL,\r\n[pop_receipt] [uniqueidentifier] NULL\r\n) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Creating primary key [PK_big_data_transaction_worker] on [tompit].[big_data_transaction_worker]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_worker] ADD CONSTRAINT [PK_big_data_transaction_worker] PRIMARY KEY CLUSTERED  ([id]) ON [PRIMARY]\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[big_data_index_field]'\r\nGO\r\nALTER TABLE [tompit].[big_data_index_field] ADD CONSTRAINT [FK_big_data_index_field_big_data_index] FOREIGN KEY ([index]) REFERENCES [tompit].[big_data_index] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[big_data_index]'\r\nGO\r\nALTER TABLE [tompit].[big_data_index] ADD CONSTRAINT [FK_big_data_index_big_data_node] FOREIGN KEY ([node]) REFERENCES [tompit].[big_data_node] ([id]) ON DELETE CASCADE\r\nGO\r\nALTER TABLE [tompit].[big_data_index] ADD CONSTRAINT [FK_big_data_index_big_data_partition] FOREIGN KEY ([partition]) REFERENCES [tompit].[big_data_partition] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[big_data_transaction_defer]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_defer] ADD CONSTRAINT [FK_big_data_transaction_defer_big_data_partition] FOREIGN KEY ([partition]) REFERENCES [tompit].[big_data_partition] ([id]) ON DELETE CASCADE\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_defer] ADD CONSTRAINT [FK_big_data_transaction_defer_big_data_transaction_worker] FOREIGN KEY ([worker]) REFERENCES [tompit].[big_data_transaction_worker] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[big_data_transaction_block]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_block] ADD CONSTRAINT [FK_big_data_transaction_block_big_data_transaction] FOREIGN KEY ([transaction]) REFERENCES [tompit].[big_data_transaction] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nPRINT N'Adding foreign keys to [tompit].[big_data_transaction_worker]'\r\nGO\r\nALTER TABLE [tompit].[big_data_transaction_worker] ADD CONSTRAINT [FK_big_data_transaction_worker_big_data_transaction_block] FOREIGN KEY ([block]) REFERENCES [tompit].[big_data_transaction_block] ([id]) ON DELETE CASCADE\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nCOMMIT TRANSACTION\r\nGO\r\nIF @@ERROR <> 0 SET NOEXEC ON\r\nGO\r\nDECLARE @Success AS BIT\r\nSET @Success = 1\r\nSET NOEXEC OFF\r\nIF (@Success = 1) PRINT 'The database update succeeded'\r\nELSE BEGIN\r\n\tIF @@TRANCOUNT > 0 ROLLBACK TRANSACTION\r\n\tPRINT 'The database update failed'\r\nEND\r\nGO\r\n"}]